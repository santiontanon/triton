    include "constants.asm"
    include "autogenerated/text-constants.asm"


;-----------------------------------------------
; PAGE 1:
    
    org #0000

;-----------------------------------------------
; A useful macro for putting self-unpacking data in page 1:
PAGE1_DECOMPRESS: MACRO ?plt_ptr,?target_ptr
    ld hl,?plt_ptr
    ld de,?target_ptr
    jp unpack_compressed
    ENDM

; Music:
decompress_story_song_from_page1:
    PAGE1_DECOMPRESS story_song_pletter_p1, music_buffer
story_song_pletter_p1:
    ; incbin "autogenerated/story-song.plt"
    incbin "autogenerated/story-song.apl"

; This one doesn't fit in page 1, so, we put it outside
; decompress_mission_song_from_page1:
;     PAGE1_DECOMPRESS mission_song_pletter_p1, music_buffer
; mission_song_pletter_p1:
;     ; incbin "autogenerated/mission-song.plt"
;     incbin "autogenerated/mission-song.apl"

decompress_weapons_song_from_page1:
    PAGE1_DECOMPRESS weapons_song_pletter_p1, music_buffer
weapons_song_pletter_p1:
    ; incbin "autogenerated/weapons-song.plt"
    incbin "autogenerated/weapons-song.apl"

decompress_boss_song_from_page1:
    PAGE1_DECOMPRESS boss_song_pletter_p1,music_buffer
boss_song_pletter_p1:
    ; incbin "autogenerated/boss-song.plt"
    incbin "autogenerated/boss-song.apl"

decompress_moai_song_from_page1:
    PAGE1_DECOMPRESS moai_song_pletter_p1,music_buffer
moai_song_pletter_p1:
    ; incbin "autogenerated/moai-song.plt"
    incbin "autogenerated/moai-song.apl"

decompress_tech_song_from_page1:
    PAGE1_DECOMPRESS tech_song_pletter_p1,music_buffer
tech_song_pletter_p1:
    ; incbin "autogenerated/tech-song.plt"
    incbin "autogenerated/tech-song.apl"

decompress_water_song_from_page1:
    PAGE1_DECOMPRESS water_song_pletter_p1,music_buffer
water_song_pletter_p1:
    ; incbin "autogenerated/water-song.plt"
    incbin "autogenerated/water-song.apl"

decompress_temple_song_from_page1:
    PAGE1_DECOMPRESS temple_song_pletter_p1,music_buffer
temple_song_pletter_p1:
    ; incbin "autogenerated/temple-song.plt"
    incbin "autogenerated/temple-song.apl"

decompress_ending_song_from_page1:
    PAGE1_DECOMPRESS ending_song_pletter_p1,music_buffer
ending_song_pletter_p1:
    ; incbin "autogenerated/ending-song.plt"
    incbin "autogenerated/ending-song.apl"

; Misc data:
decompress_scoreboard_from_page1:
    PAGE1_DECOMPRESS scoreboard_plt_p1,buffer
scoreboard_plt_p1:
    ; incbin "autogenerated/scoreboard.plt"
    incbin "autogenerated/scoreboard.apl"

decompress_weapon_data_from_page1:
    PAGE1_DECOMPRESS weapon_data_plt_p1,weapon_gfx_and_names
weapon_data_plt_p1:
    ; incbin "autogenerated/weapon-data.plt"
    incbin "autogenerated/weapon-data.apl"


decompress_ingame_additional_tiles_plt_from_page1:
    PAGE1_DECOMPRESS ingame_additional_tiles_plt_p1,buffer
ingame_additional_tiles_plt_p1:
    ; incbin "autogenerated/additional-tiles.plt"
    incbin "autogenerated/additional-tiles.apl"

decompress_ingame_ingame_base_tiles_plt_from_page1:
    PAGE1_DECOMPRESS ingame_base_tiles_plt_p1,buffer
ingame_base_tiles_plt_p1:
    ; incbin "autogenerated/ingame-tiles-used-base.plt"
    incbin "autogenerated/ingame-tiles-used-base.apl"


; Moai data:
decompress_ingame_ingame_tile_types_moai_plt_from_page1:
    PAGE1_DECOMPRESS ingame_tile_types_moai_plt_p1,tileTypeBuffers
ingame_tile_types_moai_plt_p1:
    ; incbin "autogenerated/moai/instantiated-tile-types.plt"
    incbin "autogenerated/moai/instantiated-tile-types.apl"

decompress_pcgPatterns_moai_plt_from_page1:
    PAGE1_DECOMPRESS pcgPatterns_moai_plt_p1,pcgPatterns
pcgPatterns_moai_plt_p1:
    ; incbin "autogenerated/moai/patterns-all.plt"
    incbin "autogenerated/moai/patterns-all.apl"

decompress_moai_tile_types_from_page1:
    PAGE1_DECOMPRESS moai_tile_types_plt_p1,buffer
moai_tile_types_plt_p1:
    ; incbin "autogenerated/moai/bankTileTypes.plt"
    incbin "autogenerated/moai/bankTileTypes.apl"


; Tech data:
decompress_ingame_ingame_tile_types_tech_plt_from_page1:
    PAGE1_DECOMPRESS ingame_tile_types_tech_plt_p1,tileTypeBuffers
ingame_tile_types_tech_plt_p1:
    ; incbin "autogenerated/tech/instantiated-tile-types.plt"
    incbin "autogenerated/tech/instantiated-tile-types.apl"

decompress_pcgPatterns_tech_plt_from_page1:
    PAGE1_DECOMPRESS pcgPatterns_tech_plt_p1,pcgPatterns
pcgPatterns_tech_plt_p1:
    ; incbin "autogenerated/tech/patterns-all.plt"
    incbin "autogenerated/tech/patterns-all.apl"

decompress_tech_tile_types_from_page1:
    PAGE1_DECOMPRESS tech_tile_types_plt_p1,buffer
tech_tile_types_plt_p1:
    ; incbin "autogenerated/tech/bankTileTypes.plt"
    incbin "autogenerated/tech/bankTileTypes.apl"


; Water data:
decompress_ingame_ingame_tile_types_water_plt_from_page1:
    PAGE1_DECOMPRESS ingame_tile_types_water_plt_p1,tileTypeBuffers
ingame_tile_types_water_plt_p1:
    ; incbin "autogenerated/water/instantiated-tile-types.plt"
    incbin "autogenerated/water/instantiated-tile-types.apl"

decompress_pcgPatterns_water_plt_from_page1:
    PAGE1_DECOMPRESS pcgPatterns_water_plt_p1,pcgPatterns
pcgPatterns_water_plt_p1:
    ; incbin "autogenerated/water/patterns-all.plt"
    incbin "autogenerated/water/patterns-all.apl"

decompress_water_tile_types_from_page1:
    PAGE1_DECOMPRESS water_tile_types_plt_p1,buffer
water_tile_types_plt_p1:
    ; incbin "autogenerated/water/bankTileTypes.plt"
    incbin "autogenerated/water/bankTileTypes.apl"


; Temple data:
decompress_ingame_ingame_tile_types_temple_plt_from_page1:
    PAGE1_DECOMPRESS ingame_tile_types_temple_plt_p1,tileTypeBuffers
ingame_tile_types_temple_plt_p1:
    ; incbin "autogenerated/temple/instantiated-tile-types.plt"
    incbin "autogenerated/temple/instantiated-tile-types.apl"

decompress_pcgPatterns_temple_plt_from_page1:
    PAGE1_DECOMPRESS pcgPatterns_temple_plt_p1,pcgPatterns
pcgPatterns_temple_plt_p1:
    ; incbin "autogenerated/temple/patterns-all.plt"
    incbin "autogenerated/temple/patterns-all.apl"

decompress_temple_tile_types_from_page1:
    PAGE1_DECOMPRESS temple_tile_types_plt_p1,buffer
temple_tile_types_plt_p1:
    ; incbin "autogenerated/temple/bankTileTypes.plt"
    incbin "autogenerated/temple/bankTileTypes.apl"


; Boss data:
decompress_boss1_tiles_plt_from_page1:
    PAGE1_DECOMPRESS boss1_tiles_plt_p1,buffer3
boss1_tiles_plt_p1:
    ; incbin "autogenerated/boss1-tiles.plt"
    incbin "autogenerated/boss1-tiles.apl"

decompress_boss2_tiles_plt_from_page1:
    PAGE1_DECOMPRESS boss2_tiles_plt_p1,buffer3
boss2_tiles_plt_p1:
    ; incbin "autogenerated/boss2-tiles.plt"
    incbin "autogenerated/boss2-tiles.apl"

decompress_boss3_tiles_plt_from_page1:
    PAGE1_DECOMPRESS boss3_tiles_plt_p1,buffer3
boss3_tiles_plt_p1:
    ; incbin "autogenerated/boss3-tiles.plt"
    incbin "autogenerated/boss3-tiles.apl"

decompress_boss4_tiles_plt_from_page1:
    PAGE1_DECOMPRESS boss4_tiles_plt_p1,buffer3
boss4_tiles_plt_p1:
    ; incbin "autogenerated/boss4-tiles.plt"
    incbin "autogenerated/boss4-tiles.apl"


EndOfPage1:
    ds (#4000-$)


;-----------------------------------------------
; PAGE 2:

    org #4000   ; Start in the 2nd slot
StartOfPage2:

;-----------------------------------------------
    db "AB"     ; ROM signature
    dw Execute  ; start address
    db 0,0,0,0,0,0,0,0,0,0,0,0
;-----------------------------------------------

    ; Some checks to make sure I don't mess up and forget the assumptions I made in the code
    ; about the value of the constants:
    IF PLAYER_BULLET_STRUCT_TILE != 1
        ERROR "PLAYER_BULLET_STRUCT_TILE should be == 1 (check_for_weapon_change assumes so)"
    ENDIF

    IF PCG_WAVE_TYPES_PER_PATTERN != 4
        ERROR "PCG_WAVE_TYPES_PER_PATTERN should be == 1 (PCG_choose_enemy_wave assumes so)"
    ENDIF


;-----------------------------------------------
; Code that gets executed when the game starts
Execute:
    di
    ; init the stack:
    ld sp,#F380
    ; reset some interrupts to make sure it runs in some MSX computers 
    ; with disk controllers installed in some interrupt handlers
    ld a,#C9
    ld (HKEY),a
    ld (TIMI),a
    ei

    call SETPAGES32K

    ; Silence, init keyboard, and clear config:
    xor a
    ld (CLIKSW),a
    ; Change background colors:
    ld (BAKCLR),a
    ld (BDRCLR),a
    call CHGCLR

    ld a,2      ; Change screen mode
    call CHGMOD

    ;; 16x16 sprites:
    ld bc,#e201  ;; write #e2 in VDP register #01 (activate sprites, generate interrupts, 16x16 sprites with no magnification)
    call WRTVDP

    call CheckIf60Hz
    ld (isComputer50HzOr60Hz),a ; 0: 50Hz, 1: 60Hz

    ; Init sound engine:
    call StopMusic
    call setup_custom_interrupt

    ; jp COMPRESSED_state_braingames_screen


;-----------------------------------------------
; Entry points to the compressed code:
COMPRESSED_state_braingames_screen:     
    call decompress_compressed_code
    jp NON_GAME_COMPRESSED_CODE_START
COMPRESSED_state_mission_screen_from_game_complete:
    call decompress_compressed_code
    jp NON_GAME_COMPRESSED_CODE_START+3
COMPRESSED_state_mission_screen_from_game_failed:
    call decompress_compressed_code
    jp NON_GAME_COMPRESSED_CODE_START+6
COMPRESSED_state_gameover_screen:     
    call decompress_compressed_code
    jp NON_GAME_COMPRESSED_CODE_START+9

decompress_compressed_code:
    ld hl,compressed_code_plt
    ld de,NON_GAME_COMPRESSED_CODE_START
    jp unpack_compressed


;-----------------------------------------------
; additional assembler files source code:
    include "auxiliar.asm"  ; auxiliar is first, since some of these routines NEED to be in page 1 (e.g., the slot setup routines)
    include "pletter.asm"
    include "unaplib_fast.asm"
    include "interrupt.asm"
    include "input.asm"
    include "gfx.asm"  
    include "pcg.asm"
    include "map.asm"
    include "sound.asm"
    include "sfx.asm"
    include "text.asm"
    include "starfield.asm"
    include "player.asm"
    include "enemies.asm"
    include "tile-enemies.asm"
    include "enemy-bullets.asm"
    include "collision.asm"
    include "scoreboard.asm"
    include "weapons.asm"
    include "weapons-secondary.asm" ; missiles, torpedoes, etc.
    include "explosions.asm"
    include "power-pellets.asm"
    include "options.asm"
    include "load-level-types.asm"
    include "generate-offset-tiles.asm"

    include "boss-common.asm"
    ; this is commented out as this code is compressed:
;    include "boss-polyphemus.asm"
;    include "boss-scylla.asm"
;    include "boss-charybdis.asm"

    include "state-game.asm"
    include "state-level-complete.asm"
    include "state-boss.asm"

    ; this is commented out, as this code is compressed:
;     include "pcg-minimap.asm"
;     include "state-braingames.asm"
;     include "state-story.asm"
;     include "state-title.asm"
;     include "state-mission.asm"
;     include "state-weapons.asm"
;     include "state-gameover.asm"
;     include "state-ending.asm"
EndofCode:


;-----------------------------------------------
speed_up_levels:
    db 48, 64, 80, 96, 112, 128, 144, 160

weapon_bullet_cadence:
    db 20, 12, 10

weapon_triple_bullet_cadence:
    db 32, 26, 16

weapon_twin_bullet_cadence:
    db 32, 14

weapon_laser_cadence:
    db 28, 20, 16

weapon_twister_laser_cadence:
    db 24, 16, 12

weapon_flame_cadence:
    db 20, 12, 8

torpedo_heavy_cadence:
    db 96, 64, 64

torpedo_light_cadence:
    db 64, 40, 40

missiles_cadence:
    db 56, 32, 32

bullet_option_cadence:
    db 24, 24, 16

missile_option_cadence:
    db 44, 44, 32



;-----------------------------------------------
difficulty_d1_values_ROM:
    db 128  ; difficulty_spawn_p:               higher is harder
    db 2    ; difficulty_bullet_speed:          higher is harder
    db 16   ; difficulty_fire_rate_fast:        higher is harder
    db 1    ; difficulty_sprite_fire_rate_slow: higher is harder
    db 0    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 4    ; difficulty_fire_delay:            lower is harder
    db 1    ; difficulty_enemy_speed:           higher is harder
    db 1    ; difficulty_enemy_health_base:     higher is harder
    db 1    ; difficulty_enemy_health_med:      higher is harder
    db 4    ; difficulty_enemy_health_tough:    higher is harder
    db 64   ; difficulty_power_spawn_p:         higher is harder
    db 128  ; difficulty_power_spawn_low_p:     higher is harder
;     db 0    ; difficulty_level_length:
    db 10    ; difficulty_level_length:
difficulty_d1_values_ROM_end:

difficulty_d2_values_ROM:
    db 128  ; difficulty_spawn_p:               higher is harder
    db 2    ; difficulty_bullet_speed:          higher is harder
    db 20   ; difficulty_fire_rate_fast:        higher is harder
    db 2    ; difficulty_sprite_fire_rate_slow: higher is harder
    db 0    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 4    ; difficulty_fire_delay:            lower is harder
    db 1    ; difficulty_enemy_speed:           higher is harder
    db 1    ; difficulty_enemy_health_base:     higher is harder
    db 1    ; difficulty_enemy_health_med:      higher is harder
    db 4    ; difficulty_enemy_health_tough:    higher is harder
    db 96  ; difficulty_power_spawn_p:         higher is harder
    db 144  ; difficulty_power_spawn_low_p:     higher is harder
    db 15   ; difficulty_level_length:

difficulty_d3_values_ROM:
    db 144  ; difficulty_spawn_p:               higher is harder
    db 2    ; difficulty_bullet_speed:          higher is harder
    db 24   ; difficulty_fire_rate_fast:        higher is harder
    db 4    ; difficulty_sprite_fire_rate_slow: higher is harder
    db 0    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 3    ; difficulty_fire_delay:            lower is harder
    db 1    ; difficulty_enemy_speed:           higher is harder
    db 1    ; difficulty_enemy_health_base:     higher is harder
    db 2    ; difficulty_enemy_health_med:      higher is harder
    db 6    ; difficulty_enemy_health_tough:    higher is harder
    db 128  ; difficulty_power_spawn_p:         higher is harder
    db 160  ; difficulty_power_spawn_low_p:     higher is harder
    db 20   ; difficulty_level_length:

difficulty_d4_values_ROM:
    db 144  ; difficulty_spawn_p:               higher is harder
    db 3    ; difficulty_bullet_speed:          higher is harder
    db 20   ; difficulty_fire_rate_fast:        higher is harder
    db 2    ; difficulty_sprite_fire_rate_slow: higher is harder
    db 2    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 2    ; difficulty_fire_delay:            lower is harder
    db 1    ; difficulty_enemy_speed:           higher is harder
    db 1    ; difficulty_enemy_health_base:     higher is harder
    db 2    ; difficulty_enemy_health_med:      higher is harder
    db 6    ; difficulty_enemy_health_tough:    higher is harder
    db 144  ; difficulty_power_spawn_p:         higher is harder
    db 176  ; difficulty_power_spawn_low_p:     higher is harder
    db 25   ; difficulty_level_length:

difficulty_d5_values_ROM:
    db 160  ; difficulty_spawn_p:               higher is harder
    db 3    ; difficulty_bullet_speed:          higher is harder
    db 32   ; difficulty_fire_rate_fast:        higher is harder
    db 8   ; difficulty_sprite_fire_rate_slow:  higher is harder
    db 4    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 2    ; difficulty_fire_delay:            lower is harder
    db 2    ; difficulty_enemy_speed:           higher is harder
    db 2    ; difficulty_enemy_health_base:     higher is harder
    db 3    ; difficulty_enemy_health_med:      higher is harder
    db 8    ; difficulty_enemy_health_tough:    higher is harder
    db 160  ; difficulty_power_spawn_p:         higher is harder
    db 192  ; difficulty_power_spawn_low_p:     higher is harder
    db 30    ; difficulty_level_length:

difficulty_d6_values_ROM:
    db 176  ; difficulty_spawn_p:               higher is harder
    db 3    ; difficulty_bullet_speed:          higher is harder
    db 40   ; difficulty_fire_rate_fast:        higher is harder
    db 12   ; difficulty_sprite_fire_rate_slow: higher is harder
    db 8    ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 1    ; difficulty_fire_delay:            lower is harder
    db 2    ; difficulty_enemy_speed:           higher is harder
    db 2    ; difficulty_enemy_health_base:     higher is harder
    db 4    ; difficulty_enemy_health_med:      higher is harder
    db 8   ; difficulty_enemy_health_tough:     higher is harder
    db 160  ; difficulty_power_spawn_p:         higher is harder
    db 208  ; difficulty_power_spawn_low_p:     higher is harder
    db 35   ; difficulty_level_length:

difficulty_triton_values_ROM:
    db 176  ; difficulty_spawn_p:               higher is harder
    db 3    ; difficulty_bullet_speed:          higher is harder
    db 64   ; difficulty_fire_rate_fast:         higher is harder
    db 20   ; difficulty_sprite_fire_rate_slow: higher is harder
    db 12   ; difficulty_sprite_fire_rate_none: higher is harder (for enemies that should only fire in hard difficulty)
    db 0    ; difficulty_fire_delay:            lower is harder
    db 2    ; difficulty_enemy_speed:           higher is harder
    db 2    ; difficulty_enemy_health_base:     higher is harder
    db 6    ; difficulty_enemy_health_med:      higher is harder
    db 12   ; difficulty_enemy_health_tough:    higher is harder
    db 160  ; difficulty_power_spawn_p:         higher is harder
    db 208  ; difficulty_power_spawn_low_p:     higher is harder
    db 40   ; difficulty_level_length:


;-----------------------------------------------
weapon_configuration_default_ROM:
    db WEAPON_SPEED, WEAPON_NONE, WEAPON_BULLET, WEAPON_NONE, WEAPON_NONE, WEAPON_NONE, WEAPON_NONE, WEAPON_TRANSFER
weapon_configuration_default_ROM_end:


;-----------------------------------------------
; Text data:
font:
    incbin "autogenerated/font.bin"

textBankPointers:
    dw textBank0
    dw textBank1
    dw textBank2
    dw textBank3
    dw textBank4
    dw textBank5
    dw textBank6

textBank0:
    incbin "autogenerated/textBank0.plt"
;     incbin "autogenerated/textBank0.apl"
textBank1:
    incbin "autogenerated/textBank1.plt"
;     incbin "autogenerated/textBank1.apl"
textBank2:
    incbin "autogenerated/textBank2.plt"
;     incbin "autogenerated/textBank2.apl"
textBank3:
    incbin "autogenerated/textBank3.plt"
;     incbin "autogenerated/textBank3.apl"
textBank4:
    incbin "autogenerated/textBank4.plt"
;     incbin "autogenerated/textBank4.apl"
textBank5:
    incbin "autogenerated/textBank5.plt"
;     incbin "autogenerated/textBank5.apl"
textBank6:
    incbin "autogenerated/textBank6.plt"
;     incbin "autogenerated/textBank6.apl"


; Graphics:
cutscene_gfx_plt:
    ; incbin "autogenerated/cutscenes.plt"
    incbin "autogenerated/cutscenes.apl"

mission_cutscenes_gfx:
    incbin "autogenerated/mission-cutscenes.bin"

ui_tiles_plt:
    ; incbin "autogenerated/ui-tiles.plt"
    incbin "autogenerated/ui-tiles.apl"

ui_sprites_plt:
    ; incbin "autogenerated/sprites-ui.plt"
    incbin "autogenerated/sprites-ui.apl"

title_screen_tiles_plt:
    ; incbin "autogenerated/title-screen-tiles.plt"
    incbin "autogenerated/title-screen-tiles.apl"

title_screen_data_plt:
    ; incbin "autogenerated/title-screen-data.plt"
    incbin "autogenerated/title-screen-data.apl"

; weapon graphics:
weapon_tiles_bullet_plt:
    ; incbin "autogenerated/weapon-bullet.plt"
    incbin "autogenerated/weapon-bullet.apl"

weapon_tiles_laser_plt:
    ; incbin "autogenerated/weapon-laser.plt"
    incbin "autogenerated/weapon-laser.apl"

weapon_tiles_twister_laser_plt:
    ; incbin "autogenerated/weapon-twister-laser.plt"
    incbin "autogenerated/weapon-twister-laser.apl"

weapon_tiles_flame_plt:
    ; incbin "autogenerated/weapon-flame.plt"
    incbin "autogenerated/weapon-flame.apl"

weapon_tiles_directional_plt:
    ; incbin "autogenerated/weapon-directional.plt"
    incbin "autogenerated/weapon-directional.apl"

sprites_ingame_plt:
    ; incbin "autogenerated/sprites-ingame.plt"
    incbin "autogenerated/sprites-ingame.apl"


player_shield_colors:
    db COLOR_WHITE, COLOR_LIGHT_BLUE, COLOR_BLUE, COLOR_LIGHT_BLUE

player_shield_colors_last_hit:
    db COLOR_WHITE, COLOR_DARK_YELLOW, COLOR_RED, COLOR_DARK_YELLOW

player_sprite_attributes_ROM:
    db 80,32,12,COLOR_GREY
    db 80,32,8,COLOR_DARK_BLUE
    db 200,0,PLAYER_SPRITE_SHIELD,COLOR_WHITE

scoreboard_sprites_ROM:
    db 175,0,0,COLOR_TRANSPARENT
    db 175,0,0,COLOR_TRANSPARENT
    db 175,0,0,COLOR_TRANSPARENT
    db 175,0,0,COLOR_TRANSPARENT

    include "autogenerated/powerpellet-types.asm"

tile_explosion:
    incbin "autogenerated/explosion.bin"

tile_explosion_large:
    incbin "autogenerated/explosion-large.bin"


tile_enemies_moai0:
    incbin "autogenerated/moai/enemies-bank0.bin"
tile_enemies_moai1:
    incbin "autogenerated/moai/enemies-bank1.bin"
destroyable_tiles_moai:
    incbin "autogenerated/moai/destroyable-tiles.bin"

tile_enemies_tech0:
    incbin "autogenerated/tech/enemies-bank0.bin"
tile_enemies_tech1:
    incbin "autogenerated/tech/enemies-bank1.bin"

tile_enemies_water0:
    incbin "autogenerated/water/enemies-bank0.bin"
tile_enemies_water1:
    incbin "autogenerated/water/enemies-bank1.bin"

tile_enemies_temple0:
    incbin "autogenerated/temple/enemies-bank0.bin"
tile_enemies_temple1:
    incbin "autogenerated/temple/enemies-bank1.bin"

enemy_wave_types_plt:
    ; incbin "autogenerated/compressed-enemy-waves.plt"
    incbin "autogenerated/compressed-enemy-waves.apl"


sprite_upload_order_plt:
    ; incbin "autogenerated/compressed-sprite-upload-order.plt"
    incbin "autogenerated/compressed-sprite-upload-order.apl"

; Boss data:
boss1_data_plt:
    ; incbin "autogenerated/boss1-data.plt"
    incbin "autogenerated/boss1-data.apl"
boss2_data_plt:
    ; incbin "autogenerated/boss2-data.plt"
    incbin "autogenerated/boss2-data.apl"
boss3_data_plt:
    ; incbin "autogenerated/boss3-data.plt"
    incbin "autogenerated/boss3-data.apl"
boss4_data_plt:
    ; incbin "autogenerated/boss4-data.plt"
    incbin "autogenerated/boss4-data.apl"

; Data that didn't fit in page 1:
mission_song_pletter:
    ; incbin "autogenerated/mission-song.plt"
    incbin "autogenerated/mission-song.apl"



map_y_ptr_table_negative: ; up to -4
    dw mapBuffer-MAP_BUFFER_WIDTH*0, mapBuffer-MAP_BUFFER_WIDTH*1, mapBuffer-MAP_BUFFER_WIDTH*2, mapBuffer-MAP_BUFFER_WIDTH*3, mapBuffer-MAP_BUFFER_WIDTH*4
map_y_ptr_table:
    dw mapBuffer+MAP_BUFFER_WIDTH*0, mapBuffer+MAP_BUFFER_WIDTH*1, mapBuffer+MAP_BUFFER_WIDTH*2, mapBuffer+MAP_BUFFER_WIDTH*3, mapBuffer+MAP_BUFFER_WIDTH*4, mapBuffer+MAP_BUFFER_WIDTH*5, mapBuffer+MAP_BUFFER_WIDTH*6, mapBuffer+MAP_BUFFER_WIDTH*7, mapBuffer+MAP_BUFFER_WIDTH*8, mapBuffer+MAP_BUFFER_WIDTH*9, mapBuffer+MAP_BUFFER_WIDTH*10
    dw mapBuffer+MAP_BUFFER_WIDTH*11, mapBuffer+MAP_BUFFER_WIDTH*12, mapBuffer+MAP_BUFFER_WIDTH*13, mapBuffer+MAP_BUFFER_WIDTH*14, mapBuffer+MAP_BUFFER_WIDTH*15, mapBuffer+MAP_BUFFER_WIDTH*16, mapBuffer+MAP_BUFFER_WIDTH*17, mapBuffer+MAP_BUFFER_WIDTH*18, mapBuffer+MAP_BUFFER_WIDTH*19, mapBuffer+MAP_BUFFER_WIDTH*20, mapBuffer+MAP_BUFFER_WIDTH*21


waving_pattern_y_increments:
    db 3,2,1,0,0,-1,-2,-3,-3,-2,-1,0,0,1,2,3

compressed_code_plt:
    ; incbin "autogenerated/compressed-code.plt"
    incbin "autogenerated/compressed-code.apl"

compressed_boss1_code_plt:
    ; incbin "autogenerated/compressed-boss1-code.plt"
    incbin "autogenerated/compressed-boss1-code.apl"

compressed_boss2_code_plt:
    ; incbin "autogenerated/compressed-boss2-code.plt"
    incbin "autogenerated/compressed-boss2-code.apl"

compressed_boss3_code_plt:
    ; incbin "autogenerated/compressed-boss3-code.plt"
    incbin "autogenerated/compressed-boss3-code.apl"

compressed_boss4_code_plt:
    ; incbin "autogenerated/compressed-boss4-code.plt"
    incbin "autogenerated/compressed-boss4-code.apl"


END_OF_ROM:

;-----------------------------------------------
    ds (((($-1)/#4000)+1)*#4000-$)


;-----------------------------------------------
; RAM:
    org #c000   ; RAM goes to the 4th page
RAM:
pcg_map_pattern_buffer:     ; this has size PCG_PATTERN_WIDTH*MAP_HEIGHT + PCG_WAVE_TYPES_PER_PATTERN = 356
buffer:                     ds virtual 512  ; this can be used up to 4096
boss1_frames:
boss2_frames:
boss3_frames:
boss4_frames:
buffer2:                    ds virtual 512  ; small buffer of just 512 in length

; boss code goes here, and must be smaller than 2048
; BOSS_COMPRESSED_CODE_START = pcgPatterns + 512:
pcgPatterns:

    IF pcgPatterns + 512 != BOSS_COMPRESSED_CODE_START
        ERROR "BOSS_COMPRESSED_CODE_START does not have the expected value, something is off!"
    ENDIF


buffer3:                    ds virtual 1024 ; this buffer can be up to 3072 in length
buffer4:                    ds virtual 1024 ; this buffer can be up to 2048 in length 
                                                ; used by:
                                                ; - load_sprites_sprtbl2 (at game start)
cutscene_gfx_buffer:        ds virtual 512  ; used to store cutscenes (story and ending)
buffer5:                    ds virtual 512  ; this buffer can be up to 512 in length
                                            ; used by:
                                            ; - get_text_from_bank (anywhere that text needs to be rendered)
                                            ; - load_option_weapon_tiles (ingame)
                                            ; - load_weapon_tiles (ingame)
                                            ; - ending_scroll_bank1_up

text_draw_buffer:           ds virtual 256  ; 32*8 = 256 (enough to draw a full screen width of text)
auxilliary_spawn_buffer:    
text_buffer:                ds virtual 64   ; buffer to store decompressed text before rendering
last_decompressed_text_bank:    ds virtual 1

; General variables:
ROM_slot:                   ds virtual 1        ; slot where the game was inserted
isComputer50HzOr60Hz:       ds virtual 1        ; 0: 50Hz, 1: 60Hz
interrupt_cycle:            ds virtual 1
keyboard_line_state:        ds virtual 6        ; interleaved bytes state/clicks
keyboard_line_state_prev:   ds virtual 3
keyboard_line_clicks:       equ keyboard_line_state+1
randSeedIndex:              ds virtual 1
randData:                   ds virtual 2
text_skip:                  ds virtual 1

; Global game state (should be reset when game starts):
global_state_minimap:       ds virtual MINIMAP_WIDTH*(MINIMAP_HEIGHT+1) ; we make it one row bigger
                                                        ; so that we don't need to check if we are in the bottom row (saves code)
global_state_credits:       ds virtual 1
global_state_weapon_configuration:  ds virtual 8    ; which weapons are equipped
global_state_weapon_upgrade_level:  ds virtual N_WEAPONS
global_state_levels_completed:      ds virtual 1
global_state_bosses_defeated:        ds virtual 1

global_state_selected_level:        ds virtual 2    ; which level from the minimap we are playing
global_state_selected_level_type:   ds virtual 1    ; 0: moai, 1: tech, 2: water, 3: temple
global_state_selected_level_boss:   ds virtual 1    ; 0 if no boss, != 0 for each of the bosses
global_state_boss2_position:        ds virtual 1    ; random planet in 12th column
global_state_boss3_position:        ds virtual 1    ; random planet in 18th column

weapon_gfx_and_names:                   ds virtual N_WEAPONS*6
weapon_detailed_descritions:            ds virtual (N_WEAPONS-1)*8
weapon_max_buyable_upgrades:            ds virtual (N_WEAPONS-1)
weapon_max_ingame_upgrades_at_level:    ds virtual (N_WEAPONS-1)*3
weapon_price:                           ds virtual (N_WEAPONS-1)
weapon_slot_number:                     ds virtual (N_WEAPONS-1)

; sound variables:
MUSIC_tempo:                        ds virtual 1
beginning_of_sound_variables_except_tempo:
MUSIC_play:                         ds virtual 1
MUSIC_tempo_counter:                ds virtual 1
MUSIC_instruments:                  ds virtual 3
MUSIC_channel3_instrument_buffer:   ds virtual 1    ; this stores the instrument of channel 3, which is special, since SFX might overwrite it
MUSIC_start_pointer:                ds virtual 2  
SFX_pointer:                        ds virtual 2
MUSIC_pointer:                      ds virtual 2
MUSIC_repeat_stack_ptr:             ds virtual 2    ; 15
MUSIC_repeat_stack:                 ds virtual 4*3  ; 27
MUSIC_instrument_envelope_ptr:      ds virtual 3*2  ; 33
SFX_priority:                       ds virtual 1    ; the SFX from the game have more priority than those triggered by music
MUSIC_transpose:                    ds virtual 1
MUSIC_time_step_required:           ds virtual 1    ; 39
end_of_sound_variables:
music_buffer:                       ds virtual 1152

END_OF_COMMON_RAM:

;----------------------------------------------- variables only used in certain states:
; BRAIN GAMES/MISSION/WEAPONS/ENDING SCREENS STATE:
    org END_OF_COMMON_RAM

line1_next_ptr: ds virtual 2
line1_state:    ds virtual 7

line2_next_ptr: ds virtual 2
line2_state:    ds virtual 7
line2_delay:    ds virtual 1

frame_width:    ds virtual 1
frame_height:   ds virtual 1

ui_cursor_area:     ds virtual 1
ui_cursor_position: ds virtual 1
ui_selected_weapon: ds virtual 1

ui_cursor_sprites:  ds virtual 4*4
ui_upgrade_scroll_position:  ds virtual 1
ui_upgrade_scroll_position_last:  ds virtual 1

pcg_minimap_nw_point:        ds virtual 2
pcg_minimap_middle_point:    ds virtual 2
pcg_minimap_se_point:        ds virtual 2

ending_timer:   ds virtual 2

    IF ending_timer > NON_GAME_COMPRESSED_CODE_START
        ERROR "pcg_minimap_se_point > NON_GAME_COMPRESSED_CODE_START"
    ENDIF


;----------------------------------------------- variables only used in certain states:
; IN-GAME STATE:
    org END_OF_COMMON_RAM

; align to 256:
    ds virtual (((($-1)/#100)+1)*#100-$)

; tile type buffers (4KB):
tileTypeBuffers:            ds virtual 2*4*256  ; 256 aligned

; note: the starfield update function might write on the previous byte to this (which is fine, as
;       the last bytes of tileTypeBuffers are unused). But do not put anythin important here in the middle
; circular buffer containing the map as it is being generated by the PCG system
mapBuffer:                  ds virtual MAP_BUFFER_WIDTH*MAP_HEIGHT  ; 32 aligned

data_to_zero_on_game_start_start:

PCG_pattern_constraint:     ds virtual 1
PCG_mapBuffer_nextptr:      ds virtual 2
PCG_remaining_empty_patterns: ds virtual 1  ; how many empty patterns left to insert at the beginning of a level
PCG_last_pattern_used_ptr:  ds virtual 2    ; to cycle through the pattern base, without a bias towards the ones at the top
PCG_respawn_enemies_ptr:    ds virtual 2    ; ptr from where to resume respawning enemies
PCG_respawn_enemies_row:    ds virtual 1    ; row from where to resume respawning enemies
PCG_next_pattern_x:         ds virtual 1

scroll_x_half_pixel:        ds virtual 1   ; incrementing this counter twice, moves the scroll by one pixel
scroll_x_tile:              ds virtual 1

in_game_sprite_attributes:
player_sprite_attributes:                   ds virtual 4*3
enemy_sprite_attributes:                    ds virtual 4*MAX_ENEMIES
enemy_bullet_sprite_attributes:             ds virtual 4*MAX_ENEMY_BULLETS
player_secondary_bullets_sprite_attributes: ds virtual 4*MAX_PLAYER_SECONDARY_BULLETS
option_sprite_attributes:                   ds virtual 4*2

player_y:                   equ player_sprite_attributes
player_x:                   equ player_sprite_attributes+1
player_y2:                  equ player_sprite_attributes+4     ; the second sprite
player_x2:                  equ player_sprite_attributes+1+4
player_y3:                  equ player_sprite_attributes+8     ; shield
player_x3:                  equ player_sprite_attributes+1+8


player_tile_x:              ds virtual 1    ; these two are calculated once in the player update function,
player_tile_y:              ds virtual 1    ; and reused throughout the frame

player_state:               ds virtual 1    ; 0: normal control, 1: explosion
player_state_timer:         ds virtual 1
player_lives:               ds virtual 1
player_lose_life_signal:    ds virtual 1
player_desired_frame:       ds virtual 1

player_hold_fire_timer:     ds virtual 1

player_last_movement:       ds virtual 1    ; used to determine the direction of directional weapons
player_current_movement:    ds virtual 1    ; used to determine the direction of directional weapons

ingame_weapon_max_level:           ds virtual 8
ingame_weapon_current_level:       ds virtual 8
ingame_weapon_current_selection:   ds virtual 1

player_speed_level:         ds virtual 1    ; two variables to control player move speed
player_speed_state:         ds virtual 1

player_weapon_change_signal:    ds virtual 1    ; when this is != 0, player cannot fire until a weapon change happens
player_weapon_change_ptr:   ds virtual 2    ; pointer of the weapon tiles to load when player_weapon_change_timer reaches 0 

player_primary_weapon_energy:       ds virtual 1
player_primary_weapon_special_triggered:    ds virtual 1

player_primary_weapon_idx:              ds virtual 1
player_primary_weapon:                  ds virtual 1
player_primary_weapon_level:            ds virtual 1
player_primary_weapon_damage:           ds virtual 1
player_primary_weapon_cooldown:         ds virtual 1
player_primary_weapon_cooldown_state:   ds virtual 1

player_secondary_weapon_idx:            ds virtual 1
player_secondary_weapon:                ds virtual 1
player_secondary_weapon_level:          ds virtual 1
player_secondary_weapon_cooldown:       ds virtual 1
player_secondary_weapon_cooldown_state: ds virtual 1

player_option_weapon_idx:               ds virtual 1
player_option_weapon:                   ds virtual 1
player_option_weapon_level:             ds virtual 1
player_option_weapon_cooldown:          ds virtual 1
player_option_weapon_cooldown_state:    ds virtual 1

player_laser_type:          ds virtual 1    ; 0 if the player is currently NOT firing a laser, 1 with laser, and 2 with flame
player_laser_bg_buffer:     ds virtual 32
player_laser_bg_buffer_ptr: ds virtual 2
player_laser_bg_buffer_length: ds virtual 1
player_last_last_tile:      ds virtual 1

player_shield_level:        ds virtual 1

player_credits:             ds virtual 1

player_bullets:             ds virtual MAX_PLAYER_BULLETS*PLAYER_BULLET_STRUCT_SIZE
player_secondary_bullets:   ds virtual MAX_PLAYER_SECONDARY_BULLETS*PLAYER_SECONDARY_BULLET_STRUCT_SIZE

enemies:                    ds virtual MAX_ENEMIES*ENEMY_STRUCT_SIZE

last_wave_type_spawned:     ds virtual 1
enemy_spawn_next_waves:     ds virtual 3    ; waves for the next 3 patterns
enemy_spawn_queue:          ds virtual ENEMY_SPAWN_QUEUE_SIZE*ENEMY_SPAWN_STRUCT_SIZE
enemy_spawn_queue_end:
enemy_spawn_queue_next_to_push: ds virtual 2
enemy_spawn_queue_next_to_pop:  ds virtual 2

tile_enemies:               ds virtual MAX_TILE_ENEMIES*TILE_ENEMY_STRUCT_SIZE
enemy_bullets:              ds virtual MAX_ENEMY_BULLETS*ENEMY_BULLET_STRUCT_SIZE
tile_explosions:            ds virtual MAX_TILE_EXPLOSIONS*TILE_EXPLOSION_STRUCT_SIZE
power_pellets:              ds virtual MAX_POWER_PELLETS*POWER_PELLET_STRUCT_SIZE

redraw_power_pellets_signal:    ds virtual 1
any_tile_enemy_to_delete:   ds virtual 1

; starfield:
starfield_cycle:            ds virtual 1
starfield_tile:             ds virtual 1
starfield_ptrs:             ds virtual 33*2 ; pointers of the stars in the current map
starfield_scroll_speed:     ds virtual 1 ; 0: normal speed (1/2 of scroll), 1: 2x, 2: 4x, 3: 8x, 4: 16x (stars as dashes)

in_boss:                    ds virtual 1
data_to_zero_on_game_start_end:

; level type variables:
level_type_tile_enemies_bank0:  ds virtual 2
level_type_tile_enemies_bank1:  ds virtual 2
level_type_song_ptr:            ds virtual 2
level_type_song_speed:          ds virtual 1

; scoreboard:
scoreboard_rendering_buffer:    ds virtual 16

; difficulty
difficulty_values_RAM:
difficulty_spawn_p:         ds virtual 1
difficulty_bullet_speed:    ds virtual 1
difficulty_fire_rate_fast:  ds virtual 1
difficulty_sprite_fire_rate_slow:  ds virtual 1
difficulty_sprite_fire_rate_none:  ds virtual 1
difficulty_fire_delay:      ds virtual 1
difficulty_enemy_speed:     ds virtual 1
difficulty_enemy_health_base:   ds virtual 1
difficulty_enemy_health_med:    ds virtual 1
difficulty_enemy_health_tough:  ds virtual 1
difficulty_power_spawn_p:   ds virtual 1        ; for enemies with high chance of dropping power pills
difficulty_power_spawn_low_p:   ds virtual 1    ; for enemies with low chance of dropping power pills
difficulty_level_length:    ds virtual 1

level_end_countdown:        ds virtual 1    ; number of patterns left for the current level to be over
                                            ; this starts counting down when the first empty pattern is
                                            ; generated at the end of the level

destroyable_tiles_bank0:    ds virtual 3
destroyable_tiles_bank1:    ds virtual 3

; boss variables:
boss_variables_start:
boss_state:                 ds virtual 1    ; 0: accelerating stars, 1: boss appearing, etc.
boss_state_cycle:           ds virtual 1
boss_x:                     ds virtual 1
boss_y:                     ds virtual 1
boss_health:                ds virtual 1
boss_hit:                   ds virtual 1
boss_hit_gfx:               ds virtual 1

boss_previous_ptr:          ds virtual 2

boss_polyphemus_moving_direction:
boss_target_y:              ds virtual 1

boss_charybdis_moving_speed:
boss_target_x:              ds virtual 1

boss_scylla_head_frame:
boss_polyphemus_eye_frame:  ds virtual 1

boss_scylla_jaw_frame:
boss_polyphemus_leg_frame:  ds virtual 1

boss_triton_body_frame:
boss_scylla_arm_frame:
boss_polyphemus_arm_frame:  ds virtual 1

boss_laser_length:          ds virtual 1
boss_laser_last_ptr:        ds virtual 2
boss_laser_last_length:     ds virtual 1

boss_charybdis_moving_direction:
boss_charybdis_shape:       ds virtual 2*6  ; direction-length, direction-length, ...
boss_charybdis_tail_previous_ptr:   ds virtual 2

boss_triton_trident_x:
boss_charybdis_head_x:      ds virtual 1

boss_triton_trident_y:
boss_charybdis_head_y:      ds virtual 1

boss_triton_trident_previous_ptr:
boss_charybdis_head_previous_ptr:   ds virtual 2
    
boss_charybdis_head_direction:  ds virtual 1
boss_charybdis_time_without_opening:    ds virtual 1    ; if this goes beyond a certain constant, it'll open up its vulnerable spot right away

boss_variables_end:

sprite_upload_order1:       ds virtual 4*7*2
sprite_upload_order2:       ds virtual 4*7*2
sprite_upload_order3:       ds virtual 4*7*2
sprite_upload_order4:       ds virtual 4*7*2
enemy_wave_types:           ds virtual 17*15

END_OF_IN_GAME_RAM:

